{"version":3,"sources":["js/Reducer/index.js","js/store/index.js","js/component/List.js","js/component/Form.js","js/component/App.js","js/Action/index.js","index.js"],"names":["initialState","createReducer","state","action","type","payload","rootReducer","combineReducers","createUser","form","formReducer","store","createStore","List","connect","user","props","firstName","lastName","email","password","confirmPassword","reduxForm","handleSubmit","pristine","submitting","console","log","onSubmit","Field","name","component","placeholder","disabled","show","App","submit","values","setState","dispatch","reset","this","React","Component","Form","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d50bbe5.chunk.js","sourcesContent":["const initialState = {};\n  \nfunction createReducer(state = initialState, action) {\n  if (action.type === \"createUser\") {\n    return (action.payload)\n  }\n  return state;\n}\n  \nexport default createReducer;","import { createStore , combineReducers } from \"redux\";\nimport createReducer from \"../Reducer/index\";\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n    createUser: createReducer,\n    form: formReducer\n  });\n  \nconst store = createStore(rootReducer);\n\nexport default store;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return { user: state.createUser };\n};\n\nconst ConnectedList = (props) => {\n  return(<div>\n    <label>Details</label><br></br>\n    Firstname: {props.user.firstName}<br></br>\n    LastName: {props.user.lastName}<br></br>\n    Email: {props.user.email}<br></br>\n    Password: {props.user.password}<br></br>\n    Confirmpassword: {props.user.confirmPassword}\n  </div>)\n}\n\n\nconst List = connect(mapStateToProps)(ConnectedList);\n\nexport default List;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport List from \"../component/List\";\n\n\n\n\nconst SimpleForm = (props) => {\n  const { handleSubmit, pristine,submitting,user } = props;\n  console.log(user)\n  return (\n    <div>\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>First Name</label>\n        <div>\n          <Field\n            name=\"firstName\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Last Name</label>\n        <div>\n          <Field\n            name=\"lastName\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Email</label>\n        <div>\n          <Field\n            name=\"email\"\n            component=\"input\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Password</label>\n        <div>\n          <Field\n            name=\"password\"\n            component=\"input\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>ConfirmPassword</label>\n        <div>\n          <Field\n            name=\"confirmPassword\"\n            component=\"input\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </div>\n    </form>\n    {user.show && <div>\n      <List />\n    </div>}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { user: state.createUser };\n};\n\nexport default reduxForm({\n  form: \"simple\" \n})(connect (mapStateToProps) (SimpleForm));\n\n\n","import React from \"react\";\nimport { createUser } from \"../Action/index\";\nimport SimpleForm from './Form'\nimport { connect } from \"react-redux\";\nimport {reset} from 'redux-form';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createUser: user => dispatch(createUser(user)),\n    dispatch\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName:'',\n      lastName:'',\n      email:'',\n      password:'',\n      confirmPassword:'',\n      show:false\n    };\n    \n  }\n  \n\n  submit = values => {\n    console.log(values)\n    this.setState({ firstName : values.firstName , lastName : values.lastName , email:values.email,\n    password: values.password,confirmPassword:values.confirmPassword});\n    this.setState({show:true})\n    const { firstName,lastName,email,password,confirmPassword,show } = this.state;\n    this.props.createUser({ firstName,lastName,email,password,confirmPassword,show });\n    this.props.dispatch(reset('simple'));\n  }\n\n  render() {\n    const { firstName,lastName,email,password,confirmPassword,show } = this.state;\n    this.props.createUser({ firstName,lastName,email,password,confirmPassword,show });\n    return <SimpleForm onSubmit={this.submit} />\n  }\n}\nconst Form = connect(\n  null,\n  mapDispatchToProps\n)(App);\n\nexport default Form;","export function createUser(payload) {\n  return { type: \"createUser\", payload }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport App from \"./js/component/App\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}